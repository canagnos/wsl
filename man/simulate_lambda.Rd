% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/library_simulate.R
\name{simulate_lambda}
\alias{simulate_lambda}
\title{Labelling function simulator}
\usage{
simulate_lambda(accuracy_true, coverage_true, labels_true = NULL,
  sample_size = 1000, seed = 1, verbose = FALSE)
}
\arguments{
\item{accuracy_true}{A px1 vector representing the accuracy of the LFs}

\item{coverage_true}{A px1 vector representing the coverage of the LFs}

\item{labels_true}{An nx1 vector of ground truth labels in \code{{-1,1}}. Note that when \code{labels_true} is not \code{NULL}, it overwrites any value of \code{sample_size} that might be provided. If \code{NULL}, \code{labels_true} is generated from a binomial distribution with probability 1/2.}

\item{sample_size}{The number of labels to generate if \code{labels_true} is \code{NULL}. Overwritten by \code{length(labels_true)} otherwise.}

\item{seed}{Always set your seed :)}

\item{verbose}{If \code{TRUE}, some statistics are printed to stdout.}
}
\value{
A list containing \code{labels_true} (the ground truth labels which were either provided or generated), and \code{nxp} matrix taking values in \code{{-1,0,1}}, where \code{-1} represents the negative class, \code{1} represents the positive class, and \code{0} represents a missing value (following standard conventions in WSL).
}
\description{
Simulate p weak, independent labelling functions (LF) with known accuracy and coverage
}
\examples{
simulate_lambda(
    accuracy_true = c(0.7,0.9), coverage_true = c(0.2,0.6))
simulate_lambda(
    accuracy_true = c(0.7,0.9), coverage_true = c(0.2,0.6), labels_true = c(rep(-1, 5), rep(1,5)))
}

